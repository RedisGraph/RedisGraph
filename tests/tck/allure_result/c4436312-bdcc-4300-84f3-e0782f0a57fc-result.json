{"status": "broken", "name": "Standalone call to procedure that takes no arguments", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "skip"}, {"name": "feature", "value": "ProcedureCallAcceptance"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython2"}], "stop": 1578486118346, "historyId": "449ba7cd7fda12630901be2880281a9b", "start": 1578486118132, "steps": [{"status": "passed", "start": 1578486118134, "stop": 1578486118342, "name": "Given an empty graph"}, {"status": "broken", "attachments": [{"source": "9ba1eafb-2fb4-4df3-8ef3-c21c7fdfa4eb-attachment.csv", "type": "text/csv", "name": ".table"}], "stop": 1578486118343, "start": 1578486118343, "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.labels() :: (label :: STRING?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.labels() :: (label :: STRING?)')\n\n"}, "name": "And there exists a procedure test.labels() :: (label :: STRING?)"}, {"status": "skipped", "start": 1578486118345, "stop": 1578486118345, "name": "When executing query", "attachments": [{"source": "9a1dafda-f07d-46d6-b212-4c11bb21c0bc-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "skipped", "start": 1578486118345, "stop": 1578486118346, "name": "Then the result should be, in order", "attachments": [{"source": "120c719a-ae91-4123-9a4b-0beffe86abde-attachment.csv", "type": "text/csv", "name": ".table"}]}, {"status": "skipped", "start": 1578486118346, "stop": 1578486118346, "name": "And no side effects"}], "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.labels() :: (label :: STRING?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.labels() :: (label :: STRING?)')\n\n"}, "uuid": "fa746d1a-a1a2-4529-9044-7d97c2137cff"}