{"status": "broken", "name": "In-query call to procedure should fail if explicit argument is missing", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "skip"}, {"name": "feature", "value": "ProcedureCallAcceptance"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython2"}], "stop": 1578486122783, "historyId": "65e78df17b99426beb7ad15bb0312149", "start": 1578486122658, "steps": [{"status": "passed", "start": 1578486122660, "stop": 1578486122780, "name": "Given an empty graph"}, {"status": "broken", "attachments": [{"source": "238eed29-8d8b-43a8-83ce-16934f18b636-attachment.csv", "type": "text/csv", "name": ".table"}], "stop": 1578486122781, "start": 1578486122781, "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.my.proc(name :: STRING?, in :: INTEGER?) :: (out :: INTEGER?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.my.proc(name :: STRING?, in :: INTEGER?) :: (out :: INTEGER?)')\n\n"}, "name": "And there exists a procedure test.my.proc(name :: STRING?, in :: INTEGER?) :: (out :: INTEGER?)"}, {"status": "skipped", "start": 1578486122783, "stop": 1578486122783, "name": "When executing query", "attachments": [{"source": "c29b1f64-4c6e-4348-89bb-58b3cf561051-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "broken", "start": 1578486122783, "stop": 1578486122783, "name": "Then a SyntaxError should be raised at compile time: InvalidNumberOfArguments", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'a SyntaxError should be raised at compile time: InvalidNumberOfArguments')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then a SyntaxError should be raised at compile time: InvalidNumberOfArguments')\n\n"}}], "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.my.proc(name :: STRING?, in :: INTEGER?) :: (out :: INTEGER?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.my.proc(name :: STRING?, in :: INTEGER?) :: (out :: INTEGER?)')\n\n"}, "uuid": "1c72b718-9504-4161-9612-e7ae22517b94"}