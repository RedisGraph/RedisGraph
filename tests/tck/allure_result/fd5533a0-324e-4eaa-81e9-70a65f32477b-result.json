{"status": "failed", "name": "`toFloat()` failing on invalid arguments -- @1.6 ", "parameters": [{"name": "invalid", "value": "p"}], "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "skip"}, {"name": "feature", "value": "TypeConversionFunctions"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython2"}], "stop": 1578486169564, "historyId": "180227fd77dd0c00cae07692b93f47ea", "start": 1578486169358, "steps": [{"status": "passed", "start": 1578486169358, "stop": 1578486169562, "name": "Given an empty graph"}, {"status": "passed", "start": 1578486169562, "stop": 1578486169563, "name": "And having executed", "attachments": [{"source": "7e6b1b9c-e1b0-4fd6-a357-53bd1e13dd7f-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "passed", "start": 1578486169563, "stop": 1578486169564, "name": "When executing query", "attachments": [{"source": "61877a8d-a5d0-4a35-b18c-7b7b7b015f4c-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "failed", "start": 1578486169564, "stop": 1578486169564, "name": "Then a TypeError should be raised at runtime: InvalidArgumentValue", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features/steps/Steps.py\", line 142, in step_impl\n    assert \"Type mismatch\" in exception.message\n"}}], "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features/steps/Steps.py\", line 142, in step_impl\n    assert \"Type mismatch\" in exception.message\n"}, "uuid": "9bbdfe24-44f9-4f53-8a59-793b08e55e4a"}