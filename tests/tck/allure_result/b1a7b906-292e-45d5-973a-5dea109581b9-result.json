{"status": "broken", "name": "Handling triadic friend of a friend that is a friend with implicit subset of labels", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "skip"}, {"name": "feature", "value": "TriadicSelection"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython2"}], "stop": 1578486163658, "historyId": "aedf4190f627ee096ec7a22221a0a7be", "start": 1578486163432, "steps": [{"status": "passed", "start": 1578486163434, "stop": 1578486163652, "name": "Given the binary-tree-2 graph"}, {"status": "passed", "start": 1578486163653, "stop": 1578486163655, "name": "When executing query", "attachments": [{"source": "54c96c11-aafa-482b-afbe-121d77ece509-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "broken", "attachments": [{"source": "663518b0-5624-49a8-8880-4ed92b2f3770-attachment.csv", "type": "text/csv", "name": ".table"}], "stop": 1578486163657, "start": 1578486163655, "statusDetails": {"message": "ResponseError: RedisGraph does not support OPTIONAL MATCH.\n", "trace": "  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features/steps/Steps.py\", line 84, in step_impl\n    raise exception\n"}, "name": "Then the result should be"}, {"status": "skipped", "start": 1578486163658, "stop": 1578486163658, "name": "And no side effects"}], "statusDetails": {"message": "ResponseError: RedisGraph does not support OPTIONAL MATCH.\n", "trace": "  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features/steps/Steps.py\", line 84, in step_impl\n    raise exception\n"}, "uuid": "9b114931-8e19-4bc4-827d-8204e28741fc"}