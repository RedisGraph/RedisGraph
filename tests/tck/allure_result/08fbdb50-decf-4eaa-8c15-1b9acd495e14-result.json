{"status": "broken", "name": "In-query procedure call should fail if shadowing an already bound variable", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "skip"}, {"name": "feature", "value": "ProcedureCallAcceptance"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython2"}], "stop": 1578486123858, "historyId": "6a545f51a2bd4934f607f9c850e895b2", "start": 1578486123702, "steps": [{"status": "passed", "start": 1578486123704, "stop": 1578486123855, "name": "Given an empty graph"}, {"status": "broken", "attachments": [{"source": "9c5aa708-0135-46e4-9e81-09bc40222807-attachment.csv", "type": "text/csv", "name": ".table"}], "stop": 1578486123856, "start": 1578486123855, "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.labels() :: (label :: STRING?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.labels() :: (label :: STRING?)')\n\n"}, "name": "And there exists a procedure test.labels() :: (label :: STRING?)"}, {"status": "skipped", "start": 1578486123857, "stop": 1578486123858, "name": "When executing query", "attachments": [{"source": "d27fab16-7c66-4145-a3ef-02810d5e184a-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "skipped", "start": 1578486123858, "stop": 1578486123858, "name": "Then a SyntaxError should be raised at compile time: VariableAlreadyBound"}], "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.labels() :: (label :: STRING?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.labels() :: (label :: STRING?)')\n\n"}, "uuid": "1c5b4356-e92b-42d5-8970-3c02696c08c1"}