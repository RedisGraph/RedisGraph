{"status": "broken", "name": "In-query procedure call should fail if one of the argument expressions uses an aggregation function", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "skip"}, {"name": "feature", "value": "ProcedureCallAcceptance"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython2"}], "stop": 1578486124076, "historyId": "080ae1f2efe45e9223d6bc1aee10b69a", "start": 1578486123860, "steps": [{"status": "passed", "start": 1578486123861, "stop": 1578486124072, "name": "Given an empty graph"}, {"status": "broken", "attachments": [{"source": "c0996b09-4cf4-43c6-88b2-20098e1b2729-attachment.csv", "type": "text/csv", "name": ".table"}], "stop": 1578486124074, "start": 1578486124073, "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.labels(in :: INTEGER?) :: (label :: STRING?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.labels(in :: INTEGER?) :: (label :: STRING?)')\n\n"}, "name": "And there exists a procedure test.labels(in :: INTEGER?) :: (label :: STRING?)"}, {"status": "skipped", "start": 1578486124075, "stop": 1578486124075, "name": "When executing query", "attachments": [{"source": "a2428acf-a5f2-4872-99fa-0e0bbd66076e-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "skipped", "start": 1578486124076, "stop": 1578486124076, "name": "Then a SyntaxError should be raised at compile time: InvalidAggregation"}], "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.labels(in :: INTEGER?) :: (label :: STRING?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.labels(in :: INTEGER?) :: (label :: STRING?)')\n\n"}, "uuid": "6cb69dc8-9dd5-401e-829b-e9f386933d67"}