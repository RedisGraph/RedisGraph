{"status": "broken", "name": "In-query call to procedure with explicit arguments", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "skip"}, {"name": "feature", "value": "ProcedureCallAcceptance"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython2"}], "stop": 1578486120071, "historyId": "3201c0fa4d4a59321bdd5f1f19b70b0f", "start": 1578486119944, "steps": [{"status": "passed", "start": 1578486119946, "stop": 1578486120067, "name": "Given an empty graph"}, {"status": "broken", "attachments": [{"source": "8507d728-63f5-4fa2-b084-ec5775bba9a0-attachment.csv", "type": "text/csv", "name": ".table"}], "stop": 1578486120068, "start": 1578486120067, "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.my.proc(name :: STRING?, id :: INTEGER?) :: (city :: STRING?, country_code :: INTEGER?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.my.proc(name :: STRING?, id :: INTEGER?) :: (city :: STRING?, country_code :: INTEGER?)')\n\n"}, "name": "And there exists a procedure test.my.proc(name :: STRING?, id :: INTEGER?) :: (city :: STRING?, country_code :: INTEGER?)"}, {"status": "skipped", "start": 1578486120070, "stop": 1578486120070, "name": "When executing query", "attachments": [{"source": "13b9da69-6353-40b7-8a79-ba6dafffddff-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "skipped", "start": 1578486120070, "stop": 1578486120071, "name": "Then the result should be, in order", "attachments": [{"source": "0612e1e8-f9d8-436d-b811-927b7ab469ce-attachment.csv", "type": "text/csv", "name": ".table"}]}, {"status": "skipped", "start": 1578486120071, "stop": 1578486120071, "name": "And no side effects"}], "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.my.proc(name :: STRING?, id :: INTEGER?) :: (city :: STRING?, country_code :: INTEGER?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.my.proc(name :: STRING?, id :: INTEGER?) :: (city :: STRING?, country_code :: INTEGER?)')\n\n"}, "uuid": "9d90338d-31f6-4da4-bcb1-aced71c4fc08"}