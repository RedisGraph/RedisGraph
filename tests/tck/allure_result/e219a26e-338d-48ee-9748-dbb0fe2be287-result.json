{"status": "broken", "name": "Handling triadic friend of a friend that is not a friend with different relationship type", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "skip"}, {"name": "feature", "value": "TriadicSelection"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython2"}], "stop": 1578486160784, "historyId": "8d92c54941e2e4d0e1df43204937e7bd", "start": 1578486160580, "steps": [{"status": "passed", "start": 1578486160582, "stop": 1578486160781, "name": "Given the binary-tree-1 graph"}, {"status": "passed", "start": 1578486160782, "stop": 1578486160783, "name": "When executing query", "attachments": [{"source": "607bb43f-c99e-448a-9266-9da03fbdd9c0-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "broken", "attachments": [{"source": "db600bbc-f1ae-4968-9738-cf064ceddf39-attachment.csv", "type": "text/csv", "name": ".table"}], "stop": 1578486160783, "start": 1578486160783, "statusDetails": {"message": "ResponseError: RedisGraph does not support OPTIONAL MATCH.\n", "trace": "  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features/steps/Steps.py\", line 84, in step_impl\n    raise exception\n"}, "name": "Then the result should be"}, {"status": "skipped", "start": 1578486160784, "stop": 1578486160784, "name": "And no side effects"}], "statusDetails": {"message": "ResponseError: RedisGraph does not support OPTIONAL MATCH.\n", "trace": "  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features/steps/Steps.py\", line 84, in step_impl\n    raise exception\n"}, "uuid": "3db40f01-da06-437c-ba7e-dc59f85524bf"}