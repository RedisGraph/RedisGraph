{"status": "broken", "name": "In-query call to procedure with argument of type INTEGER accepts value of type FLOAT", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "skip"}, {"name": "feature", "value": "ProcedureCallAcceptance"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython2"}], "stop": 1578486121829, "historyId": "8129127b61436ba8f4ff12b3bff45b49", "start": 1578486121704, "steps": [{"status": "passed", "start": 1578486121706, "stop": 1578486121825, "name": "Given an empty graph"}, {"status": "broken", "attachments": [{"source": "48f8f61c-55b8-46a0-b3d2-232c54b0b353-attachment.csv", "type": "text/csv", "name": ".table"}], "stop": 1578486121827, "start": 1578486121826, "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.my.proc(in :: INTEGER?) :: (out :: STRING?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.my.proc(in :: INTEGER?) :: (out :: STRING?)')\n\n"}, "name": "And there exists a procedure test.my.proc(in :: INTEGER?) :: (out :: STRING?)"}, {"status": "skipped", "start": 1578486121828, "stop": 1578486121829, "name": "When executing query", "attachments": [{"source": "99c2da1a-4813-48bb-bd2e-fac8860a8a37-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "skipped", "start": 1578486121829, "stop": 1578486121829, "name": "Then the result should be, in order", "attachments": [{"source": "75c5f64b-ef08-4140-9676-e937479fc41b-attachment.csv", "type": "text/csv", "name": ".table"}]}, {"status": "skipped", "start": 1578486121829, "stop": 1578486121829, "name": "And no side effects"}], "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.my.proc(in :: INTEGER?) :: (out :: STRING?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.my.proc(in :: INTEGER?) :: (out :: STRING?)')\n\n"}, "uuid": "59fb6369-612a-4f1b-ad36-369a2d4cfcaf"}