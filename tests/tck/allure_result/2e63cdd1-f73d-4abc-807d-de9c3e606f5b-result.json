{"status": "broken", "name": "In-query call to procedure with explicit arguments that drops all result fields", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "skip"}, {"name": "feature", "value": "ProcedureCallAcceptance"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython2"}], "stop": 1578486120198, "historyId": "12e6c5aced66b49aeecb5112e370c6e4", "start": 1578486120073, "steps": [{"status": "passed", "start": 1578486120076, "stop": 1578486120194, "name": "Given an empty graph"}, {"status": "broken", "attachments": [{"source": "48e69ff5-2b49-404e-b62b-3735d8ea3597-attachment.csv", "type": "text/csv", "name": ".table"}], "stop": 1578486120196, "start": 1578486120195, "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.my.proc(name :: STRING?, id :: INTEGER?) :: (city :: STRING?, country_code :: INTEGER?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.my.proc(name :: STRING?, id :: INTEGER?) :: (city :: STRING?, country_code :: INTEGER?)')\n\n"}, "name": "And there exists a procedure test.my.proc(name :: STRING?, id :: INTEGER?) :: (city :: STRING?, country_code :: INTEGER?)"}, {"status": "skipped", "start": 1578486120197, "stop": 1578486120197, "name": "When executing query", "attachments": [{"source": "7792cb2a-ec1c-44b6-8d2e-3d24157e8441-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "skipped", "start": 1578486120198, "stop": 1578486120198, "name": "Then the result should be, in order", "attachments": [{"source": "ca07dd87-2d29-41eb-af8f-ef8262d4b07f-attachment.csv", "type": "text/csv", "name": ".table"}]}, {"status": "skipped", "start": 1578486120198, "stop": 1578486120198, "name": "And no side effects"}], "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.my.proc(name :: STRING?, id :: INTEGER?) :: (city :: STRING?, country_code :: INTEGER?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.my.proc(name :: STRING?, id :: INTEGER?) :: (city :: STRING?, country_code :: INTEGER?)')\n\n"}, "uuid": "6fc97c91-3c3d-48d2-94df-d8bfc1e87771"}