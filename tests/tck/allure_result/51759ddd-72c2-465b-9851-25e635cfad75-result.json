{"status": "failed", "name": "`toFloat()` failing on invalid arguments -- @1.2 ", "parameters": [{"name": "invalid", "value": "[]"}], "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "skip"}, {"name": "feature", "value": "TypeConversionFunctions"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython2"}], "stop": 1578486168733, "historyId": "da5ab5555c4c080ee13e4438a7b49366", "start": 1578486168520, "steps": [{"status": "passed", "start": 1578486168520, "stop": 1578486168731, "name": "Given an empty graph"}, {"status": "passed", "start": 1578486168731, "stop": 1578486168732, "name": "And having executed", "attachments": [{"source": "099e2bd2-0593-407c-a648-ac9c4425e94a-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "passed", "start": 1578486168732, "stop": 1578486168732, "name": "When executing query", "attachments": [{"source": "c94e3f1b-93a0-4cbe-a5a4-e8ce2f522817-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "failed", "start": 1578486168733, "stop": 1578486168733, "name": "Then a TypeError should be raised at runtime: InvalidArgumentValue", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features/steps/Steps.py\", line 142, in step_impl\n    assert \"Type mismatch\" in exception.message\n"}}], "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features/steps/Steps.py\", line 142, in step_impl\n    assert \"Type mismatch\" in exception.message\n"}, "uuid": "b4c8c694-d579-4dda-94e4-b6bb894f291c"}