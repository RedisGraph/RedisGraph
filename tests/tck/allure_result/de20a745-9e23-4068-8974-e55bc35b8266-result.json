{"status": "broken", "name": "Standalone call to procedure with argument of type FLOAT accepts value of type INTEGER", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "skip"}, {"name": "feature", "value": "ProcedureCallAcceptance"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython2"}], "stop": 1578486121271, "historyId": "be8f0c57f848834e151ed32338cbbca7", "start": 1578486121150, "steps": [{"status": "passed", "start": 1578486121151, "stop": 1578486121265, "name": "Given an empty graph"}, {"status": "broken", "attachments": [{"source": "a1840df9-d4c8-4113-a913-a44f7acdd0db-attachment.csv", "type": "text/csv", "name": ".table"}], "stop": 1578486121267, "start": 1578486121266, "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.my.proc(in :: FLOAT?) :: (out :: STRING?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.my.proc(in :: FLOAT?) :: (out :: STRING?)')\n\n"}, "name": "And there exists a procedure test.my.proc(in :: FLOAT?) :: (out :: STRING?)"}, {"status": "skipped", "start": 1578486121270, "stop": 1578486121270, "name": "When executing query", "attachments": [{"source": "2101eac7-49c1-4802-9240-488f2c5bd343-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "skipped", "start": 1578486121270, "stop": 1578486121271, "name": "Then the result should be, in order", "attachments": [{"source": "d61fcfe0-5307-46d4-baae-b80426943fd5-attachment.csv", "type": "text/csv", "name": ".table"}]}, {"status": "skipped", "start": 1578486121271, "stop": 1578486121271, "name": "And no side effects"}], "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.my.proc(in :: FLOAT?) :: (out :: STRING?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.my.proc(in :: FLOAT?) :: (out :: STRING?)')\n\n"}, "uuid": "283af571-c719-45ca-87f5-c66971c98de2"}