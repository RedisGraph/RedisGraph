{"status": "broken", "name": "Standalone call to procedure with explicit arguments", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "skip"}, {"name": "feature", "value": "ProcedureCallAcceptance"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython2"}], "stop": 1578486120414, "historyId": "bbe49f0547d279a659036990db581b6e", "start": 1578486120205, "steps": [{"status": "passed", "start": 1578486120208, "stop": 1578486120410, "name": "Given an empty graph"}, {"status": "broken", "attachments": [{"source": "8d1cc3be-f5ae-4ebe-a47c-332eb5842b04-attachment.csv", "type": "text/csv", "name": ".table"}], "stop": 1578486120411, "start": 1578486120410, "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.my.proc(name :: STRING?, id :: INTEGER?) :: (city :: STRING?, country_code :: INTEGER?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.my.proc(name :: STRING?, id :: INTEGER?) :: (city :: STRING?, country_code :: INTEGER?)')\n\n"}, "name": "And there exists a procedure test.my.proc(name :: STRING?, id :: INTEGER?) :: (city :: STRING?, country_code :: INTEGER?)"}, {"status": "skipped", "start": 1578486120413, "stop": 1578486120413, "name": "When executing query", "attachments": [{"source": "98d11d28-7584-48c6-94cb-4b817433dcc7-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "skipped", "start": 1578486120413, "stop": 1578486120413, "name": "Then the result should be, in order", "attachments": [{"source": "d18757dd-a6e7-4ffa-80fe-df87fa5dd7eb-attachment.csv", "type": "text/csv", "name": ".table"}]}, {"status": "skipped", "start": 1578486120414, "stop": 1578486120414, "name": "And no side effects"}], "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.my.proc(name :: STRING?, id :: INTEGER?) :: (city :: STRING?, country_code :: INTEGER?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.my.proc(name :: STRING?, id :: INTEGER?) :: (city :: STRING?, country_code :: INTEGER?)')\n\n"}, "uuid": "a7e2a26c-7adf-4de7-93b1-0ca637100f8a"}