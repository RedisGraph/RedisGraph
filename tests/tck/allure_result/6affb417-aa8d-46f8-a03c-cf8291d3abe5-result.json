{"status": "broken", "name": "Failing when checking existence of a non-property and non-pattern", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "skip"}, {"name": "feature", "value": "SemanticErrorAcceptance"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython2"}], "stop": 1578486141457, "historyId": "e259378b69300065a15d99c1aac26af5", "start": 1578486141328, "steps": [{"status": "passed", "start": 1578486141329, "stop": 1578486141452, "name": "Given any graph"}, {"status": "passed", "start": 1578486141453, "stop": 1578486141455, "name": "When executing query", "attachments": [{"source": "a7e9362e-6561-4b40-ae8b-f630de827b8e-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "broken", "start": 1578486141456, "stop": 1578486141456, "name": "Then a SyntaxError should be raised at compile time: InvalidArgumentExpression", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'a SyntaxError should be raised at compile time: InvalidArgumentExpression')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then a SyntaxError should be raised at compile time: InvalidArgumentExpression')\n\n"}}], "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'a SyntaxError should be raised at compile time: InvalidArgumentExpression')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then a SyntaxError should be raised at compile time: InvalidArgumentExpression')\n\n"}, "uuid": "b4994a3d-1228-4ca0-bb38-c622856d98e1"}