{"status": "broken", "name": "Using `keys()` on a literal map", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "skip"}, {"name": "feature", "value": "KeysAcceptance"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython2"}], "stop": 1578486030637, "historyId": "185d2bac9644b36f80db4c40522e7e6d", "start": 1578486030415, "steps": [{"status": "passed", "start": 1578486030417, "stop": 1578486030631, "name": "Given any graph"}, {"status": "passed", "start": 1578486030632, "stop": 1578486030635, "name": "When executing query", "attachments": [{"source": "87ce0fc9-dbbc-4cb1-b2e8-90e621ac74cf-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "broken", "attachments": [{"source": "12526b7a-ea0a-4da6-9aef-8bb425c8d515-attachment.csv", "type": "text/csv", "name": ".table"}], "stop": 1578486030636, "start": 1578486030635, "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the result should be (ignoring element order for lists)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the result should be (ignoring element order for lists)')\n\n"}, "name": "Then the result should be (ignoring element order for lists)"}, {"status": "skipped", "start": 1578486030637, "stop": 1578486030637, "name": "And no side effects"}], "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the result should be (ignoring element order for lists)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the result should be (ignoring element order for lists)')\n\n"}, "uuid": "c27df18a-9bf7-4cbd-a5fd-60c31a5bf005"}