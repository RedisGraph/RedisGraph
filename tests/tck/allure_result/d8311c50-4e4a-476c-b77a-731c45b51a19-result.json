{"status": "broken", "name": "In-query call to procedure with argument of type FLOAT accepts value of type INTEGER", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "skip"}, {"name": "feature", "value": "ProcedureCallAcceptance"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython2"}], "stop": 1578486121485, "historyId": "1a387c25e8081944fca4bfb7d2450f34", "start": 1578486121275, "steps": [{"status": "passed", "start": 1578486121279, "stop": 1578486121482, "name": "Given an empty graph"}, {"status": "broken", "attachments": [{"source": "f076d4e0-70da-4215-83ad-f11becb53365-attachment.csv", "type": "text/csv", "name": ".table"}], "stop": 1578486121483, "start": 1578486121482, "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.my.proc(in :: FLOAT?) :: (out :: STRING?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.my.proc(in :: FLOAT?) :: (out :: STRING?)')\n\n"}, "name": "And there exists a procedure test.my.proc(in :: FLOAT?) :: (out :: STRING?)"}, {"status": "skipped", "start": 1578486121484, "stop": 1578486121485, "name": "When executing query", "attachments": [{"source": "555699d9-4d35-4f68-a715-961bf9cb50cb-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "skipped", "start": 1578486121485, "stop": 1578486121485, "name": "Then the result should be, in order", "attachments": [{"source": "f71918fa-da6e-44f0-993f-e030dccfcd7d-attachment.csv", "type": "text/csv", "name": ".table"}]}, {"status": "skipped", "start": 1578486121485, "stop": 1578486121485, "name": "And no side effects"}], "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.my.proc(in :: FLOAT?) :: (out :: STRING?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.my.proc(in :: FLOAT?) :: (out :: STRING?)')\n\n"}, "uuid": "2228188b-6364-426b-9ffa-01d17d6b3c00"}