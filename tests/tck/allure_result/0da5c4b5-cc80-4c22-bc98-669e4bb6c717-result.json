{"status": "broken", "name": "Handling triadic friend of a friend that is a friend with implicit superset of labels", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "skip"}, {"name": "feature", "value": "TriadicSelection"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython2"}], "stop": 1578486163885, "historyId": "483ed1d723ead737fb1b28012ce48481", "start": 1578486163660, "steps": [{"status": "passed", "start": 1578486163662, "stop": 1578486163879, "name": "Given the binary-tree-2 graph"}, {"status": "passed", "start": 1578486163880, "stop": 1578486163882, "name": "When executing query", "attachments": [{"source": "21e2d4ba-181a-4851-9b87-f349a3ff224c-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "broken", "attachments": [{"source": "3a5d29c4-3e85-4058-b70d-5e9f4eac0a88-attachment.csv", "type": "text/csv", "name": ".table"}], "stop": 1578486163884, "start": 1578486163883, "statusDetails": {"message": "ResponseError: RedisGraph does not support OPTIONAL MATCH.\n", "trace": "  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features/steps/Steps.py\", line 84, in step_impl\n    raise exception\n"}, "name": "Then the result should be"}, {"status": "skipped", "start": 1578486163885, "stop": 1578486163885, "name": "And no side effects"}], "statusDetails": {"message": "ResponseError: RedisGraph does not support OPTIONAL MATCH.\n", "trace": "  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"/home/laptop-linux/.local/lib/python2.7/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features/steps/Steps.py\", line 84, in step_impl\n    raise exception\n"}, "uuid": "15c55472-8328-45f2-b1c8-f752b6a1c46a"}