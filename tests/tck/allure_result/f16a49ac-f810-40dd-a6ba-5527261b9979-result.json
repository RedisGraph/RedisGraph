{"status": "broken", "name": "Standalone call to procedure with argument of type INTEGER accepts value of type FLOAT", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "skip"}, {"name": "feature", "value": "ProcedureCallAcceptance"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython2"}], "stop": 1578486121702, "historyId": "672a2d660a3672fd844288ec9156e25d", "start": 1578486121488, "steps": [{"status": "passed", "start": 1578486121490, "stop": 1578486121698, "name": "Given an empty graph"}, {"status": "broken", "attachments": [{"source": "08b8b74d-44bf-48e7-9365-bc0c86287084-attachment.csv", "type": "text/csv", "name": ".table"}], "stop": 1578486121699, "start": 1578486121698, "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.my.proc(in :: INTEGER?) :: (out :: STRING?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.my.proc(in :: INTEGER?) :: (out :: STRING?)')\n\n"}, "name": "And there exists a procedure test.my.proc(in :: INTEGER?) :: (out :: STRING?)"}, {"status": "skipped", "start": 1578486121701, "stop": 1578486121701, "name": "When executing query", "attachments": [{"source": "7084836a-00fc-4444-bb36-14ffdfae0fd9-attachment.txt", "type": "text/plain", "name": ".text"}]}, {"status": "skipped", "start": 1578486121701, "stop": 1578486121701, "name": "Then the result should be, in order", "attachments": [{"source": "33d42fdb-7673-4c1a-9832-9730126709ae-attachment.csv", "type": "text/csv", "name": ".table"}]}, {"status": "skipped", "start": 1578486121702, "stop": 1578486121702, "name": "And no side effects"}], "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'there exists a procedure test.my.proc(in :: INTEGER?) :: (out :: STRING?)')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then there exists a procedure test.my.proc(in :: INTEGER?) :: (out :: STRING?)')\n\n"}, "uuid": "915ed6ba-5fd1-4504-8520-a35690d306ee"}